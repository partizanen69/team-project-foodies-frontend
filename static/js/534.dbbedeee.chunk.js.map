{"version":3,"file":"static/js/534.dbbedeee.chunk.js","mappings":"sQACA,QAA6B,gC,aCmB7B,MAiEA,EAjEoBA,KAClB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACT,KAAEC,IAASC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,QACrCC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,GAC3CC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MACXC,GAAUV,EAAAA,EAAAA,IAAYW,EAAAA,IACtBC,GAAcZ,EAAAA,EAAAA,IAAYa,EAAAA,KACzBC,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,GAqCjD,OAnCAW,EAAAA,EAAAA,YAAU,QAAU,CAACR,KAErBQ,EAAAA,EAAAA,YAAU,KACJjB,GAAQA,EAAKF,IAAMA,GACrBO,EAAgBL,EAAKF,KAAOA,GAGvB,KAELW,GAASS,EAAAA,EAAAA,IAAQ,KACjBT,GAASU,EAAAA,EAAAA,IAAQ,GAAG,IAErB,CAACnB,EAAMF,EAAIW,KAEdQ,EAAAA,EAAAA,YAAU,KACR,WACE,IACE,GAAInB,EAAI,CACNW,GAASW,EAAAA,EAAAA,KAAa,IACtB,MAAMC,QAAeC,EAAAA,EAAAA,IAAe,CAClCC,MAAOzB,EACP0B,KAAMX,EACNY,MAAO,KAEThB,GAASS,EAAAA,EAAAA,IAAQG,EAAOV,UACxBK,EAAgBK,EAAOK,MACzB,CACF,CAAE,MAAOC,IACPC,EAAAA,EAAAA,IAAUD,EAAME,QAClB,CAAC,QACCpB,GAASW,EAAAA,EAAAA,KAAa,GACxB,CACD,EAjBD,EAiBI,GACH,CAAChB,EAAcN,EAAIe,EAAaJ,KAGjCqB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGzB,GACCuB,EAAAA,EAAAA,KAACG,EAAAA,QAAM,IACLtB,EAAQuB,OAAS,GACnBC,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAACC,cAAc,EAAMC,KAAM3B,EAAS4B,YAAY,IACzDxB,IAAgBe,EAAAA,EAAAA,KAACU,EAAAA,EAAc,CAACd,MAAOX,QAG1Ce,EAAAA,EAAAA,KAAA,KAAGW,UAAWC,EAAaV,SAAC,sIAK7B,C","sources":["webpack://react-homework-template/./src/pages/ProfilePage/UserRecipes/UserRecipes.module.scss?e91e","pages/ProfilePage/UserRecipes/UserRecipes.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"empty_text\":\"UserRecipes_empty_text__uMiiE\"};","import { getUserRecipes } from 'api/recipes';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  selectList,\n  selectListLoading,\n  selectPage,\n} from '../../../redux/selectors';\nimport {\n  setIsLoading,\n  setList,\n  setPage,\n} from '../../../redux/reducers/listReducer';\nimport ListItems from '../ListItems/ListItems';\nimport ListPagination from '../ListPagination/ListPagination';\nimport { showError } from 'api/api.utils';\nimport Loader from 'components/Loader/Loader';\nimport s from './UserRecipes.module.scss';\n\nconst UserRecipes = () => {\n  const { id } = useParams();\n  const { user } = useSelector(state => state.auth);\n  const [isOwnProfile, setIsOwnProfile] = useState(false);\n  const isLoading = useSelector(selectListLoading);\n\n  const dispatch = useDispatch();\n  const recipes = useSelector(selectList);\n  const currentPage = useSelector(selectPage);\n  const [totalRecipes, setTotalRecipes] = useState(0);\n\n  useEffect(() => {}, [dispatch]);\n\n  useEffect(() => {\n    if (user && user.id && id) {\n      setIsOwnProfile(user.id === id);\n    }\n\n    return () => {\n      // reset list and page before component unmounts\n      dispatch(setList([]));\n      dispatch(setPage(1));\n    };\n  }, [user, id, dispatch]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (id) {\n          dispatch(setIsLoading(true));\n          const result = await getUserRecipes({\n            owner: id,\n            page: currentPage,\n            limit: 10,\n          });\n          dispatch(setList(result.recipes));\n          setTotalRecipes(result.total);\n        }\n      } catch (error) {\n        showError(error.message);\n      } finally {\n        dispatch(setIsLoading(false));\n      }\n    })();\n  }, [isOwnProfile, id, currentPage, dispatch]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : recipes.length > 0 ? (\n        <>\n          <ListItems isRecipeCard={true} list={recipes} isFavorite={false} />\n          {totalRecipes && <ListPagination total={totalRecipes} />}\n        </>\n      ) : (\n        <p className={s.empty_text}>\n          Nothing has been added to your recipes list yet. Please browse our\n          recipes and add your favorites for easy access in the future.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default UserRecipes;\n"],"names":["UserRecipes","id","useParams","user","useSelector","state","auth","isOwnProfile","setIsOwnProfile","useState","isLoading","selectListLoading","dispatch","useDispatch","recipes","selectList","currentPage","selectPage","totalRecipes","setTotalRecipes","useEffect","setList","setPage","setIsLoading","result","getUserRecipes","owner","page","limit","total","error","showError","message","_jsx","_Fragment","children","Loader","length","_jsxs","ListItems","isRecipeCard","list","isFavorite","ListPagination","className","s"],"sourceRoot":""}