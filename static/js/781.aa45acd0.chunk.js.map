{"version":3,"file":"static/js/781.aa45acd0.chunk.js","mappings":"qNACA,QAA+B,iCAA/B,EAA8E,gCAA9E,EAA2H,+BAA3H,EAA2K,mCAA3K,EAA+N,mC,aCQ/N,MAsCA,EAtCmBA,IAAqB,IAApB,WAAEC,GAAYD,EAChC,MAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,QAAEC,IAAYC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,QACxC,CAAEC,IAAiBC,EAAAA,EAAAA,WAAS,GASnC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAeH,SAAC,aAC/BC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAcH,SAAC,4CAC7BF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAiBH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,UAAQG,QAZOC,KACnBjB,GAASkB,EAAAA,EAAAA,OACTV,GAAc,GACdT,IACAG,EAAS,IAAI,EAQsBY,UAAWC,EAAcI,KAAK,SAAQP,SAAC,YAGtEC,EAAAA,EAAAA,KAAA,UAAQG,QAASjB,EAAYe,UAAWC,EAAcI,KAAK,SAAQP,SAAC,cAIrER,IACCS,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBH,UAC/BC,EAAAA,EAAAA,KAACO,EAAAA,QAAM,QAGV,C","sources":["webpack://react-homework-template/./src/components/LogoutForm/LogoutForm.module.scss?c023","components/LogoutForm/LogoutForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logout_title\":\"LogoutForm_logout_title__0nRIl\",\"logout_text\":\"LogoutForm_logout_text__3fohi\",\"logout_btn\":\"LogoutForm_logout_btn__UixqU\",\"logout_buttons\":\"LogoutForm_logout_buttons__Miq70\",\"loader_overlay\":\"LogoutForm_loader_overlay__kbs84\"};","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { logout } from '../../redux/actions/authActions';\nimport s from './LogoutForm.module.scss';\n\nconst LogoutForm = ({ closeModal }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { loading } = useSelector(state => state.auth);\n  const [, setIsLoggedIn] = useState(false);\n\n  const handleLogOut = () => {\n    dispatch(logout());\n    setIsLoggedIn(false);\n    closeModal();\n    navigate('/');\n  };\n\n  return (\n    <>\n      <h2 className={s.logout_title}>LOG OUT</h2>\n      <p className={s.logout_text}>You can always log back in at my time.</p>\n      <div className={s.logout_buttons}>\n        <button onClick={handleLogOut} className={s.logout_btn} type=\"button\">\n          LOGOUT\n        </button>\n        <button onClick={closeModal} className={s.logout_btn} type=\"button\">\n          CANCEL\n        </button>\n      </div>\n      {loading && (\n        <div className={s.loader_overlay}>\n          <Loader />\n        </div>\n      )}\n    </>\n  );\n};\n\nLogoutForm.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default LogoutForm;\n"],"names":["_ref","closeModal","dispatch","useDispatch","navigate","useNavigate","loading","useSelector","state","auth","setIsLoggedIn","useState","_jsxs","_Fragment","children","_jsx","className","s","onClick","handleLogOut","logout","type","Loader"],"sourceRoot":""}