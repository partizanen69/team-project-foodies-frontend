{"version":3,"file":"static/js/515.43bd3ab5.chunk.js","mappings":"4PACA,QAA6B,gC,aCqB7B,MAoDA,EApDoBA,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAcJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC1BC,GAAiBN,EAAAA,EAAAA,IAAYO,EAAAA,IAC7BC,GAAQR,EAAAA,EAAAA,IAAYS,EAAAA,IA0B1B,OAxBAC,EAAAA,EAAAA,YAAU,IACD,KACLb,GAASc,EAAAA,EAAAA,IAAQ,KACjBd,GAASe,EAAAA,EAAAA,IAAQ,GAAG,GAErB,CAACf,KAEJa,EAAAA,EAAAA,YAAU,KACR,WACE,IACEb,GAASgB,EAAAA,EAAAA,KAAa,IACtB,MAAMC,QAAeC,EAAAA,EAAAA,IAAmB,CACtCC,KAAMZ,EACNI,UAEFX,GAASc,EAAAA,EAAAA,IAAQG,EAAOZ,SAC1B,CAAE,MAAOe,IACPC,EAAAA,EAAAA,IAAUD,EAAME,QAClB,CAAC,QACCtB,GAASgB,EAAAA,EAAAA,KAAa,GACxB,CACD,EAbD,EAaI,GACH,CAACT,EAAaI,EAAOX,KAGtBuB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGvB,GACCqB,EAAAA,EAAAA,KAACG,EAAAA,QAAM,IACLrB,EAAQsB,OAAS,GACnBC,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAACC,cAAc,EAAMC,KAAM1B,EAAS2B,YAAY,IACzDvB,IAAkBc,EAAAA,EAAAA,KAACU,EAAAA,EAAc,CAACC,MAAOzB,QAG5Cc,EAAAA,EAAAA,KAAA,KAAGY,UAAWC,EAAaX,SAAC,+IAM7B,C","sources":["webpack://react-homework-template/./src/pages/ProfilePage/MyFavorites/MyFavorites.module.scss?582a","pages/ProfilePage/MyFavorites/MyFavorites.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"empty_text\":\"MyFavorites_empty_text__QSj10\"};","import { getFavoriteRecipes } from 'api/recipes';\nimport { useEffect } from 'react';\n\nimport ListItems from '../ListItems/ListItems';\nimport ListPagination from '../ListPagination/ListPagination';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectFavorites,\n  selectLimit,\n  selectList,\n  selectListLoading,\n  selectPage,\n} from '../../../redux/selectors';\nimport {\n  setIsLoading,\n  setList,\n  setPage,\n} from '../../../redux/reducers/listReducer';\nimport { showError } from 'api/api.utils';\nimport Loader from 'components/Loader/Loader';\nimport s from './MyFavorites.module.scss';\n\nconst MyFavorites = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectListLoading);\n  const recipes = useSelector(selectList);\n  const currentPage = useSelector(selectPage);\n  const totalFavorites = useSelector(selectFavorites);\n  const limit = useSelector(selectLimit);\n\n  useEffect(() => {\n    return () => {\n      dispatch(setList([])); // Reset list to empty or initial state\n      dispatch(setPage(1)); // Reset page to 1 or initial state\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        dispatch(setIsLoading(true));\n        const result = await getFavoriteRecipes({\n          page: currentPage,\n          limit,\n        });\n        dispatch(setList(result.recipes));\n      } catch (error) {\n        showError(error.message);\n      } finally {\n        dispatch(setIsLoading(false));\n      }\n    })();\n  }, [currentPage, limit, dispatch]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : recipes.length > 0 ? (\n        <>\n          <ListItems isRecipeCard={true} list={recipes} isFavorite={true} />\n          {totalFavorites && <ListPagination total={totalFavorites} />}\n        </>\n      ) : (\n        <p className={s.empty_text}>\n          Nothing has been added to your favorite recipes list yet. Please\n          browse our recipes and add your favorites for easy access in the\n          future.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default MyFavorites;\n"],"names":["MyFavorites","dispatch","useDispatch","isLoading","useSelector","selectListLoading","recipes","selectList","currentPage","selectPage","totalFavorites","selectFavorites","limit","selectLimit","useEffect","setList","setPage","setIsLoading","result","getFavoriteRecipes","page","error","showError","message","_jsx","_Fragment","children","Loader","length","_jsxs","ListItems","isRecipeCard","list","isFavorite","ListPagination","total","className","s"],"sourceRoot":""}