{"version":3,"file":"static/js/998.b396b5a0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Recipes/NavigationButton/NavigationButton.module.scss?e759","components/Recipes/NavigationButton/NavigationButton.jsx","webpack://react-homework-template/./src/components/Recipes/RecipeList/RecipeList.module.scss?0974","components/Recipes/RecipeList/RecipeList.jsx","webpack://react-homework-template/./src/components/Recipes/RecipePagination/RecipePagination.module.scss?5b82","components/Recipes/RecipePagination/RecipePagination.jsx","webpack://react-homework-template/./src/components/Recipes/RecipeFilters/RecipeFilters.module.scss?e226","components/Recipes/RecipeFilters/RecipeFilters.jsx","webpack://react-homework-template/./src/components/Recipes/Recipes.module.scss?a07b","components/Recipes/Recipes.jsx","api/ingedients.js","webpack://react-homework-template/./src/pages/MainPage/MainPage.module.scss?b09f","pages/MainPage/MainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"NavigationButton_visually-hidden__Aoao+\",\"recipes_navigation_button\":\"NavigationButton_recipes_navigation_button__gmcDC\"};","// import components\nimport Icon from 'components/Icon/Icon';\n\n// import tools\nimport PropTypes from 'prop-types';\n\n// import styles\nimport s from './NavigationButton.module.scss';\n\nconst NavigationButton = ({ title, action }) => {\n  return (\n    <button\n      type=\"button\"\n      className={s.recipes_navigation_button}\n      onClick={action}\n    >\n      <Icon\n        name=\"icon-arrow-back\"\n        width=\"16\"\n        height=\"16\"\n        className={s.recipes_navigation_button_icon}\n      />\n      <span className={s.recipes_navigation_button_text}>{title}</span>\n    </button>\n  );\n};\n\nNavigationButton.propTypes = {\n  title: PropTypes.string,\n  action: PropTypes.func,\n};\n\nexport default NavigationButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"RecipeList_visually-hidden__rsaVh\",\"recipes_list\":\"RecipeList_recipes_list__5uN95\"};","// import tools\nimport PropTypes from 'prop-types';\n\n// import components\nimport { RecipeCard } from 'components/RecipeCard/RecipeCard';\nimport Loader from 'components/Loader/Loader';\n\n// import styles\nimport s from './RecipeList.module.scss';\n\nconst RecipeList = ({recipesList, isLoading, errorMsg}) => {\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : errorMsg ? (\n        <div>{errorMsg}</div>\n      ) : recipesList && recipesList.length > 0 ? (\n        <ul className={s.recipes_list}>\n          {recipesList.map(recipe => (\n            <li key={recipe._id}>\n              <RecipeCard recipe={recipe} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>No recipes were found</div>\n      )}\n    </>\n  );\n};\n\nRecipeList.propTypes = {\n  recipesList: PropTypes.arrayOf(PropTypes.object),\n  isLoading: PropTypes.bool,\n  errorMsg: PropTypes.string\n};\n\nexport default RecipeList;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"RecipePagination_visually-hidden__3lab7\",\"pagination_elements\":\"RecipePagination_pagination_elements__coAmO\",\"pagination_element\":\"RecipePagination_pagination_element__9BYnI\",\"pagination_element_active\":\"RecipePagination_pagination_element_active__1lTqQ\"};","// import tools\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setPageFilter } from '../../../redux/actions/filtersActions';\n\n// import styles\nimport s from './RecipePagination.module.scss';\n\nconst RecipePagination = () => {\nconst dispatch = useDispatch();\n  const filters = useSelector(state => state.filters);\n\n  let elCount = [1, 2, 3];\n\n  const onPage = (number) => {\n    if (filters.page !== number) dispatch(setPageFilter(number))\n}\n\n  return (\n    <>\n      <ul className={s.pagination_elements}>\n        {elCount.map((el, index) => {\n          return (\n            <li\n              key={el}\n              className={`${s.pagination_element} ${\n                el === filters.page ? s.pagination_element_active : ''\n              }`}\n              onClick={() => onPage(index + 1)}\n            >\n              {el}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default RecipePagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"RecipeFilters_visually-hidden__qoBbl\",\"filters_wrapper\":\"RecipeFilters_filters_wrapper__t4k68\",\"filter_container\":\"RecipeFilters_filter_container__kFLav\",\"filter_select\":\"RecipeFilters_filter_select__CmXWJ\"};","// import tools\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// import styles\nimport s from './RecipeFilters.module.scss';\n\n// import store actions\nimport {\n  setIngredientsFilter,\n  clearIngredientsFilter,\n  setAreaFilter,\n  clearAreaFilter,\n} from '../../../redux/actions/filtersActions';\n\nconst RecipeFilters = () => {\n  const dispatch = useDispatch();\n  const ingredients = useSelector(state => state.ingredients);\n  const areas = useSelector(state => state.areas);\n  const filters = useSelector(state => state.filters);\n\n  const [ingredientsSelect, setIngredientSelect] = useState(filters.ingredients);\n  const [areaSelect, setAreaSelect] = useState(filters.area);\n\n  const onIngredientChange = (event) => {\n    const ingredient = event.target.value;\n\n    if (ingredient === filters.ingredients) {\n      setIngredientSelect(null);\n      dispatch(clearIngredientsFilter());\n    } else {\n      setIngredientSelect(ingredient);\n      dispatch(setIngredientsFilter(ingredient));\n    }\n  };\n\n  const onAreaChange = (event) => {\n    const area = event.target.value;\n\n    if (area === filters.area) {\n      setAreaSelect(null);\n      dispatch(clearAreaFilter());\n    } else {\n      setAreaSelect(area);\n      dispatch(setAreaFilter(area));\n    }\n  };\n\n  useEffect(() => {\n    setIngredientSelect(filters.ingredient);\n  }, [filters.ingredient]);\n\n  useEffect(() => {\n    setAreaSelect(filters.area);\n  }, [filters.area]);\n\n  return (\n    <div className={s.filters_wrapper}>\n      {/* ingredients filter */}\n      {areas ? (\n        <div className={s.filter_container}>\n          <select\n            className={s.filter_select}\n            value={ingredientsSelect ?? ''}\n            onChange={onIngredientChange}\n          >\n            <option value=\"\" disabled>\n              Ingredients\n            </option>\n            {ingredients.map(ingredient => (\n              <option\n                key={ingredient._id}\n                value={ingredient.name}\n                className={s.filter_option}\n              >\n                {ingredient.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        \n      ) : (\n        <span>Ingredients list is empty</span>\n      )}\n\n      {/* areas filter */}\n      {areas ? (\n        <div className={s.filter_container}>\n          <select\n            className={s.filter_select}\n            value={areaSelect ?? ''}\n            onChange={onAreaChange}\n          >\n            <option value=\"\" disabled>\n              Areas\n            </option>\n            {areas.map(area => (\n              <option\n                key={area._id}\n                value={area.name}\n                className={s.filter_option}\n              >\n                {area.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        \n      ) : (\n        <span>Ingredients list is empty</span>\n      )}\n    </div>\n  );\n};\n\nRecipeFilters.propTypes = {};\n\nexport default RecipeFilters;\n","// extracted by mini-css-extract-plugin\nexport default {\"visually-hidden\":\"Recipes_visually-hidden__0aIMB\",\"recipes_container\":\"Recipes_recipes_container__XAn2y\",\"recipes_header_container\":\"Recipes_recipes_header_container__Fb78n\"};","// import react tools\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import components\nimport Container from 'components/Container/Container';\nimport NavigationButton from './NavigationButton/NavigationButton';\nimport MainTitle from 'components/MainTitle/MainTitle';\nimport Subtitle from 'components/Subtitle/Subtitle';\nimport RecipeList from './RecipeList';\nimport RecipePagination from './RecipePagination';\nimport RecipeFilters from './RecipeFilters';\n\n// import requests\nimport { getRecipes } from 'api/recipes';\nimport { getIngredients } from 'api/ingedients';\nimport { getAreasList } from 'api/areas';\n\n// import store actions\nimport { setIngredients } from '../../redux/actions/ingredientsActions';\nimport { setAreas } from '../../redux/actions/areasActions';\nimport { clearPageFilter } from '../../redux/actions/filtersActions';\n\n// import styles\nimport s from './Recipes.module.scss';\n\nconst Recipes = () => {\n  const dispatch = useDispatch();\n  const { ingredients, area, category, page } = useSelector(\n    state => state.filters\n  );\n\n  // store recipes and pagination\n  const [recipesList, setRecipesList] = useState(null);\n\n  // store loading and error message\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  // get recipes\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await getRecipes({\n          page: page,\n          ingredients: ingredients,\n          area: area,\n        });\n        setIsLoading(false);\n        setRecipesList(data.recipes);\n      } catch (err) {\n        setIsLoading(false);\n        setErrorMsg(err.message);\n      }\n    })();\n  }, [page, category, ingredients, area]);\n\n  // get ingredients\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await getIngredients();\n        setIsLoading(false);\n        dispatch(setIngredients(data));\n      } catch (err) {\n        setIsLoading(false);\n        setErrorMsg(err.message);\n      }\n    })();\n  }, [dispatch]);\n\n  // get areas\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await getAreasList();\n        setIsLoading(false);\n        dispatch(setAreas(data));\n      } catch (err) {\n        setIsLoading(false);\n        setErrorMsg(err.message);\n      }\n    })();\n  }, [dispatch]);\n\n  // Clear page filter when area or ingredients change\n  useEffect(() => {\n    dispatch(clearPageFilter());\n  }, [area, ingredients, dispatch]);\n\n  return (\n    <Container className={s.recipes_container}>\n      {/* header with description and action back */}\n      <div className={s.recipes_header_container}>\n        <NavigationButton title=\"back\"></NavigationButton>\n        <MainTitle>desserts</MainTitle>\n        <Subtitle>\n          Go on a taste journey, where every sip is a sophisticated creative\n          chord, and every dessert is an expression of the most refined\n          gastronomic desires.\n        </Subtitle>\n      </div>\n\n      {/* recipes filters component */}\n      <RecipeFilters />\n\n      {/* recipes list component */}\n      <RecipeList\n        recipesList={recipesList}\n        isLoading={isLoading}\n        errorMsg={errorMsg}\n      />\n\n      {/* recipes pagination component */}\n      <RecipePagination />\n    </Container>\n  );\n};\n\nexport default Recipes;\n","import axios from 'axios';\n\nexport const getIngredients = async () => {\n  const result = await axios.get('ingredients');\n  return result.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main_container\":\"MainPage_main_container__GxHar\",\"title_container\":\"MainPage_title_container__8bLVK\",\"title\":\"MainPage_title__nglhh\"};","import { React, lazy } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport Container from 'components/Container/Container';\nimport Recipes from 'components/Recipes/Recipes';\n\nimport s from './MainPage.module.scss';\nconst Hero = lazy(() => import('../../components/Hero/Hero'));\n\nconst MainPage = () => {\n  const { openModal } = useOutletContext();\n\n  return (\n    <Container className={s.main_container}>\n      <Hero openModal={openModal} />\n      <Recipes/>\n    </Container>\n  );\n};\n\nMainPage.propTypes = {};\n\nexport default MainPage;\n"],"names":["_ref","title","action","_jsxs","type","className","s","recipes_navigation_button","onClick","children","_jsx","Icon","name","width","height","recipes_navigation_button_icon","recipes_navigation_button_text","recipesList","isLoading","errorMsg","_Fragment","Loader","length","map","recipe","RecipeCard","_id","RecipePagination","dispatch","useDispatch","filters","useSelector","state","el","index","concat","page","onPage","number","setPageFilter","RecipeFilters","ingredients","areas","ingredientsSelect","setIngredientSelect","useState","areaSelect","setAreaSelect","area","useEffect","ingredient","filters_wrapper","filter_container","filter_select","value","onChange","event","target","clearIngredientsFilter","setIngredientsFilter","disabled","filter_option","clearAreaFilter","setAreaFilter","Recipes","category","setRecipesList","setIsLoading","setErrorMsg","data","getRecipes","recipes","err","message","async","axios","get","getIngredients","setIngredients","getAreasList","setAreas","clearPageFilter","Container","NavigationButton","MainTitle","Subtitle","RecipeList","Hero","lazy","MainPage","openModal","useOutletContext"],"sourceRoot":""}