{"version":3,"file":"static/js/212.5d33b1a6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Header/Header.module.scss?6eb7","components/Header/Header.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header_container\":\"Header_header_container__cW9hf\",\"header_container__light\":\"Header_header_container__light__Iexym\",\"burger_btn\":\"Header_burger_btn__xbl5n\",\"burger_icon_common\":\"Header_burger_icon_common__ml2nM\",\"burger_icon__dark\":\"Header_burger_icon__dark__8WQyn\",\"burger_icon\":\"Header_burger_icon__g1l7q\",\"logo\":\"Header_logo__shVBB\",\"logo__dark\":\"Header_logo__dark__-4X0S\",\"profile_bar_wrapper\":\"Header_profile_bar_wrapper__9X9R4\",\"dropdown_menu\":\"Header_dropdown_menu__uqKFz\",\"dropdown_menu_link_img\":\"Header_dropdown_menu_link_img__Kyty0\",\"dropdown_menu_link\":\"Header_dropdown_menu_link__5+Yno\",\"profile_bar\":\"Header_profile_bar__Do-I8\",\"profile_bar__light\":\"Header_profile_bar__light__FXV+P\",\"profile_bar_unauthenticated\":\"Header_profile_bar_unauthenticated__asTjS\",\"avatar_wrapper\":\"Header_avatar_wrapper__I1jIz\",\"avatar\":\"Header_avatar__H1JXw\",\"name_wrapper\":\"Header_name_wrapper__p3Vsr\",\"profile_bar_name\":\"Header_profile_bar_name__6W0xL\",\"profile_bar_name__dark\":\"Header_profile_bar_name__dark__Amqhy\",\"arrow\":\"Header_arrow__+cfIw\",\"burger\":\"Header_burger__k5ipm\",\"sign_in_block\":\"Header_sign_in_block__s0Psa\",\"sign_up_block\":\"Header_sign_up_block__B6tRq\",\"icon_arrow_up_right\":\"Header_icon_arrow_up_right__cG4tm\"};","import React, { useEffect, useState, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getAvatarSrc } from '../../api/api.utils';\nimport icons from '../../assets/icons/icons.svg';\nimport s from './Header.module.scss';\n\nconst Navigation = lazy(() => import('../Navigation/Navigation'));\n\nconst Header = ({ openModal }) => {\n  const { user } = useSelector(state => state.auth);\n  const isMainPage = useSelector(state => state.ui.isMainPage);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(!!user);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [isDropDownShown, setIsDropDownShown] = useState(false);\n  const [avatar, setAvatar] = useState(user?.avatarURL ?? '');\n  const handleResize = () => {\n    setIsMobile(window.innerWidth < 768);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const toggleDropDown = () => {\n    setIsDropDownShown(!isDropDownShown);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (!event.target.closest(`.${s.profile_bar}`)) {\n        setIsDropDownShown(false);\n      }\n    };\n\n    if (isDropDownShown) {\n      window.addEventListener('click', handleClickOutside);\n    }\n\n    return () => {\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, [isDropDownShown]);\n\n  useEffect(() => {\n    setIsLoggedIn(!!user);\n  }, [user]);\n\n  useEffect(() => {\n    setAvatar(getAvatarSrc(user?.avatarURL));\n  }, [user?.avatarURL]);\n\n  return (\n    <>\n      <div\n        className={isMainPage ? s.header_container : s.header_container__light}\n      >\n        <NavLink to=\"/\" className={isMainPage ? s.logo : s.logo__dark}>\n          foodies\n        </NavLink>\n        {(isSidebarOpen || (!isMobile && isLoggedIn)) && (\n          <Navigation\n            isSidebarOpen={isSidebarOpen}\n            closeSidebar={closeSidebar}\n          />\n        )}\n        {isLoggedIn ? (\n          <div className={s.profile_bar_wrapper}>\n            <div onClick={toggleDropDown} className={s.profile_bar}>\n              <span className={s.avatar_wrapper}>\n                <img src={avatar} alt=\"avatar\" className={s.avatar} />\n              </span>\n              <div className={s.name_wrapper}>\n                {user && <p className={s.profile_bar_name}>{user.name}</p>}\n                <svg className={s.arrow}>\n                  <use xlinkHref={`${icons}#${'icon-arrow-drop-down'}`}></use>\n                </svg>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              onClick={openSidebar}\n              className={s.burger_btn}\n            >\n              <svg className={isMainPage ? s.burger_icon : s.burger_icon__dark}>\n                <use xlinkHref={`${icons}#${'icon-burger-bar'}`}></use>\n              </svg>\n            </button>\n\n            {isDropDownShown && (\n              <div className={s.dropdown_menu}>\n                <NavLink\n                  className={s.dropdown_menu_link}\n                  to={`user/${user.id}/recipies`}\n                >\n                  PROFILE\n                </NavLink>\n                <div className={s.dropdown_menu_link_img}>\n                  <button\n                    className={s.dropdown_menu_link}\n                    onClick={() => openModal('log out')}\n                  >\n                    LOG OUT\n                    <svg className={s.icon_arrow_up_right}>\n                      <use\n                        xlinkHref={`${icons}#${'icon-arrow-up-right'}`}\n                      ></use>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className={s.profile_bar_wrapper}>\n            <div className={s.profile_bar_unauthenticated}>\n              <button\n                type=\"button\"\n                onClick={() => openModal('sign in')}\n                className={s.sign_in_block}\n              >\n                SIGN IN\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => openModal('sign up')}\n                className={s.sign_up_block}\n              >\n                SIGN UP\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n};\n\nHeader.propTypes = {\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default Header;\n"],"names":["Navigation","lazy","_ref","_user$avatarURL","openModal","user","useSelector","state","auth","isMainPage","ui","isLoggedIn","setIsLoggedIn","useState","isSidebarOpen","setIsSidebarOpen","isMobile","setIsMobile","window","innerWidth","isDropDownShown","setIsDropDownShown","avatar","setAvatar","avatarURL","handleResize","useEffect","addEventListener","removeEventListener","handleClickOutside","event","target","closest","concat","s","getAvatarSrc","_jsxs","_Fragment","children","className","_jsx","NavLink","to","closeSidebar","onClick","toggleDropDown","src","alt","name","xlinkHref","icons","type","openSidebar","id","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}